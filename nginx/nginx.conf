user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    sendfile on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    gzip on;

    server {
        listen 80;

        server_name _;

        location / {
            proxy_pass http://owncloud:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # server {
    #     listen 443 ssl;
    #     server_name api.bistrotdebia.com;

    #     # ssl_certificate e ssl_certificate_key serão configurados automaticamente pelo certbot.sh
    #     ssl_certificate ssl/api.bistrotdebia.com/api.bistrotdebia.com.pem;
    #     ssl_certificate_ssl/api.bistrotdebia.com/api.bistrotdebia.com.key;
    #     ssl_dhparam ssl/ssl-dhparams.pem;
    #     include ssl/options-ssl-nginx.conf;

    #     location / {
    #         proxy_pass http://localhost$request_uri;

    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    #     location ~ /.well-known/acme-challenge {
    #         allow all;
    #         root /var/www/html;
    #     }
    # }
    # server {
    #     listen 80;
    #     server_name api.bistrotdebia.com;

    #     location / {
    #         return 301 https://$host$request_uri;
    #     }

    #     # Adicione uma localização para o Certbot verificar a autenticidade do domínio
    #     location ~ /.well-known/acme-challenge {
    #         allow all;
    #         root /var/www/html;
    #     }
    # }
}
